<?php
// =========================
//   functions.php (Darovanie LK)
// =========================

// –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
if (!defined('ABSPATH')) exit;
error_log("‚úÖ functions.php –∑–∞–≥—Ä—É–∂–µ–Ω –î–∞—Ä–æ–≤–∞–Ω–∏–µ");

// =========================
//   –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –∏ —Å–∫—Ä–∏–ø—Ç–æ–≤
// =========================
function school_enqueue_assets() {
    error_log("üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π –∏ —Å–∫—Ä–∏–ø—Ç–æ–≤");

    // Google Fonts
    wp_enqueue_style(
        'darovanie-fonts',
        'https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&family=Merriweather:wght@700&display=swap',
        [],
        null
    );

    // –û—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–∏–ª—å —Ç–µ–º—ã
    $style_path = get_stylesheet_directory() . '/style.css';
    wp_enqueue_style(
        'theme-style',
        get_stylesheet_uri(),
        ['darovanie-fonts'],
        file_exists($style_path) ? filemtime($style_path) : time()
    );

    // –°—Ç–∏–ª–∏ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
    if (is_page_template('page-cabinet.php')) {
        $cabinet_path = get_template_directory() . '/cabinet.css';
        wp_enqueue_style(
            'cabinet-style',
            get_template_directory_uri() . '/cabinet.css',
            ['theme-style'],
            file_exists($cabinet_path) ? filemtime($cabinet_path) : time()
        );
    }

    // Inputmask
    wp_enqueue_script(
        'inputmask',
        'https://unpkg.com/inputmask@5.0.8/dist/inputmask.min.js',
        [],
        null,
        true
    );

    // –û—Å–Ω–æ–≤–Ω–æ–π JS
    $app_js = get_template_directory() . '/assets/app.js';
    if (file_exists($app_js)) {
        wp_enqueue_script(
            'lk-js',
            get_template_directory_uri() . '/assets/app.js',
            [],
            filemtime($app_js),
            true
        );
    }

    error_log("‚úÖ –°—Ç–∏–ª–∏ –∏ —Å–∫—Ä–∏–ø—Ç—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã");
}
add_action('wp_enqueue_scripts', 'school_enqueue_assets', 99);

// =========================
//   –ü–æ–¥–¥–µ—Ä–∂–∫–∞ <title>
// =========================
add_action('after_setup_theme', function () {
    add_theme_support('title-tag');
    error_log("üß© –¢–µ–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç <title>");
});

// =========================
//   –°–µ—Å—Å–∏–∏ –∏ —Ö–µ–ª–ø–µ—Ä—ã
// =========================
function lk_set_session_id($sessionId) {
    if (!session_id()) session_start();
    $_SESSION['lk_session_id'] = $sessionId;
}

function lk_get_session_id() {
    if (!session_id()) session_start();
    return $_SESSION['lk_session_id'] ?? null;
}

function lk_clear_session_id() {
    if (!session_id()) session_start();
    unset($_SESSION['lk_session_id']);
}

// =========================
//   SOAP / API
// =========================
error_log('LkApi path: ' . get_template_directory() . '/tools/LkApi.php');

require_once get_template_directory() . '/tools/LkApi.php';
require_once get_template_directory() . '/tools/LkService.php';

function lk_api(): LkApi {
    static $api = null;
    if ($api) return $api;

    require_once get_template_directory() . '/tools/LkApi.php';
    $api = new LkApi();

    // üß† –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞
    $user_id = get_current_user_id();
    if ($user_id) {
        $session = get_user_meta($user_id, '_lkapi_session', true);
        if (is_array($session) && !empty($session['sessionID']) && !empty($session['sessionHash'])) {
            $api->restoreSession($session);
            error_log('üîÅ SOAP session restored: ' . print_r($session, true));
        }
    }

    return $api;
}



// =========================
//   –í—ã—Ö–æ–¥ –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
// =========================
add_action('init', function () {
    if (isset($_GET['lk_logout']) && $_GET['lk_logout'] == '1') {
        error_log("üö™ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ –õ–ö");
        lk_clear_session_id();
        wp_safe_redirect(home_url('/'));
        exit;
    }
});

// =========================
//   –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï / –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø (—á–µ—Ä–µ–∑ SOAP Register/ConfirmRegistration)
// =========================

// DEBUG —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—É–∫–æ–≤
error_log("üß© –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é AJAX —Ö—É–∫–∏ lk_send_recovery_code –∏ lk_recover_confirm");

// AJAX: –û—Ç–ø—Ä–∞–≤–∫–∞ SMS —Å –∫–æ–¥–æ–º (–≤ –º–æ–±–∏–ª—å–Ω–æ–º API —ç—Ç–æ Register)
add_action('wp_ajax_nopriv_lk_send_recovery_code', 'lk_send_recovery_code');
add_action('wp_ajax_lk_send_recovery_code', 'lk_send_recovery_code');

function lk_send_recovery_code() {
    error_log("üöÄ AJAX –≤—ã–∑–≤–∞–Ω: lk_send_recovery_code");
    error_log("üìû POST DATA: " . print_r($_POST, true));

    $phone    = sanitize_text_field($_POST['phone'] ?? '');
    $password = sanitize_text_field($_POST['password'] ?? '');

    if (!$phone || !$password) {
        error_log("‚ùå –ù–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è phone/password");
        wp_send_json_error(['message' => '–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å']);
        return;
    }

    try {
        // –∫–∞–∫ –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏: hash = MD5(password + "Darovanie")
        $hash = md5($password . 'Darovanie');
        error_log("üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è hash –¥–ª—è $phone: $hash");

        $api = lk_api();
        error_log("üì° SOAP –≤—ã–∑–æ–≤: Register($phone)");

        $res = $api->call('Register', [
            'phone'    => $phone,
            'password' => $hash
        ]);
        
        // –ï—Å–ª–∏ –ø—Ä–∏—à—ë–ª –æ–±—ä–µ–∫—Ç, –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
        if (is_object($res) && isset($res->RegisterResult)) {
            $res = $res->RegisterResult;
        }

        error_log("üì® –û—Ç–≤–µ—Ç Register: " . print_r($res, true));

        if (is_numeric($res) && $res >= 0) {
            wp_send_json_success(['code' => $res]);
        } else {
            wp_send_json_error(['message' => "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–∫–æ–¥ $res)"]);
        }
    } catch (Throwable $e) {
        error_log("üí• –û—à–∏–±–∫–∞ –≤ lk_send_recovery_code: " . $e->getMessage());
        wp_send_json_error(['message' => $e->getMessage()]);
    }
}

// AJAX: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ SMS (ConfirmRegistration)
add_action('wp_ajax_nopriv_lk_recover_confirm', 'lk_recover_confirm');
function lk_recover_confirm() {
    error_log("üöÄ AJAX –≤—ã–∑–≤–∞–Ω: lk_recover_confirm");

    $phone = sanitize_text_field($_POST['phone'] ?? '');
    $code  = sanitize_text_field($_POST['code'] ?? '');

    if (!$phone || !$code) {
        error_log("‚ùå –ù–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è phone/code");
        wp_send_json_error(['message' => '–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∫–æ–¥ –∏–∑ SMS']);
        return;
    }

    try {
        $api = lk_api();
        error_log("üì° SOAP –≤—ã–∑–æ–≤: ConfirmRegistration($phone, $code)");

        $res = $api->call('Register', [
            'phone'        => $phone,
            'passwordHash' => $hash,
            'deviceType'   => 'web',
            'appVersion'   => '1.0'
        ]);
        error_log("üì® –û—Ç–≤–µ—Ç ConfirmRegistration: " . print_r($res, true));

        if ($res == 0) {
            error_log("üì© SMS –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω (–æ–∂–∏–¥–∞–µ—Ç—Å—è —Ä–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –Ω–æ–º–µ—Ä {$phone})");
            wp_send_json_success(['message' => '–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SMS.', 'code' => 0]);
        } elseif ($res == -1) {
            wp_send_json_error(['message' => '–ù–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ']);
        } elseif ($res == -2) {
            wp_send_json_error(['message' => '–û—à–∏–±–∫–∞ SMS-—à–ª—é–∑–∞']);
        } elseif ($res == -3) {
            wp_send_json_error(['message' => '–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è']);
        } else {
            wp_send_json_error(['message' => "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ (–∫–æ–¥ $res)"]);
        }
    } catch (Throwable $e) {
        error_log("üí• –û—à–∏–±–∫–∞ –≤ lk_recover_confirm: " . $e->getMessage());
        wp_send_json_error(['message' => $e->getMessage()]);
    }
}

// =========================
//   DEBUG: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö—É–∫–æ–≤
// =========================
add_action('init', function() {
    if (defined('DOING_AJAX') && DOING_AJAX) {
        error_log("üî• AJAX –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ö—É–∫–∞ lk_send_recovery_code:");
        if (isset($GLOBALS['wp_filter']['wp_ajax_nopriv_lk_send_recovery_code'])) {
            error_log("‚úÖ –ù–∞–π–¥–µ–Ω action wp_ajax_nopriv_lk_send_recovery_code");
        } else {
            error_log("‚ö†Ô∏è Action wp_ajax_nopriv_lk_send_recovery_code –ù–ï –Ω–∞–π–¥–µ–Ω!");
        }
    }
});


// =========================
//   –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø
// =========================
// =========================
//   –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø
// =========================
add_action('wp_ajax_nopriv_lk_send_register_code', 'lk_send_register_code');
add_action('wp_ajax_lk_send_register_code', 'lk_send_register_code');

function lk_send_register_code() {
    error_log("üöÄ AJAX –≤—ã–∑–≤–∞–Ω: lk_send_register_code");
    error_log("üìû POST DATA: " . print_r($_POST, true));

    $phone = sanitize_text_field($_POST['phone'] ?? '');
    $password = sanitize_text_field($_POST['password'] ?? '');

    if (!$phone || !$password) {
        wp_send_json_error(['message' => '–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –ø–∞—Ä–æ–ª—å']);
        return;
    }

    try {
        $hash = md5($password . 'Darovanie');
        error_log("üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è hash –¥–ª—è $phone: $hash");

        $api = lk_api();
        error_log("üì° SOAP –≤—ã–∑–æ–≤: Register($phone)");

        $res = $api->call('Register', ['phone' => $phone, 'password' => $hash]);
        error_log("üß† –û—Ç–≤–µ—Ç SOAP: " . print_r($res, true));

        if (is_object($res) && isset($res->RegisterResult)) {
            $res = $res->RegisterResult;
        }

        if ($res >= 0) {
            wp_send_json_success(['message' => "–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (–æ—Ç–≤–µ—Ç: $res)"]);
        } else {
            wp_send_json_error(['message' => "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–∫–æ–¥ $res)"]);
        }
    } catch (Throwable $e) {
        error_log("üí• –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " . $e->getMessage());
        wp_send_json_error(['message' => $e->getMessage()]);
    }
}

// =========================
//   –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
// =========================
add_action('wp_ajax_nopriv_lk_register_confirm', 'lk_register_confirm');
add_action('wp_ajax_lk_register_confirm', 'lk_register_confirm');

function lk_register_confirm() {
    error_log("üöÄ AJAX –≤—ã–∑–≤–∞–Ω: lk_register_confirm");
    error_log("üìû POST DATA: " . print_r($_POST, true));

    $phone = sanitize_text_field($_POST['phone'] ?? '');
    $code  = sanitize_text_field($_POST['code'] ?? '');
    $password = sanitize_text_field($_POST['password'] ?? '');

    if (!$phone || !$code) {
        wp_send_json_error(['message' => '–ù–µ —É–∫–∞–∑–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –∫–æ–¥']);
        return;
    }

    try {
        $api = lk_api();
        error_log("üì° SOAP –≤—ã–∑–æ–≤: ConfirmRegistration($phone, $code)");

        $res = $api->call('ConfirmRegistration', [
            'phone' => $phone,
            'code'  => $code
        ]);
        error_log("üß† –û—Ç–≤–µ—Ç SOAP: " . print_r($res, true));

        if (is_object($res) && isset($res->ConfirmRegistrationResult)) {
            $res = $res->ConfirmRegistrationResult;
        }

        if ($res == 0) {
            error_log("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥...");

            // üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
            $hash = md5($password . 'Darovanie');
            $login = $api->call('Login', ['phone' => $phone, 'password' => $hash]);
            error_log("üîë Login result: " . print_r($login, true));

            if (is_object($login) && isset($login->LoginResult)) {
                $login = $login->LoginResult;
            }

            if ($login > 0) {
                lk_set_session_id($login);
                wp_send_json_success(['message' => '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞']);
            } else {
                wp_send_json_error(['message' => "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–∫–æ–¥ $login)"]);
            }
        } elseif ($res == -2) {
            wp_send_json_error(['message' => '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –∏–∑ SMS']);
        } elseif ($res == -3) {
            wp_send_json_error(['message' => '–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è']);
        } else {
            wp_send_json_error(['message' => "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–∫–æ–¥ $res)"]);
        }
    } catch (Throwable $e) {
        error_log("üí• –û—à–∏–±–∫–∞ –≤ lk_register_confirm: " . $e->getMessage());
        wp_send_json_error(['message' => $e->getMessage()]);
    }
}



add_action('wp_ajax_lk_send_question', 'lk_send_question');
add_action('wp_ajax_nopriv_lk_send_question', 'lk_send_question');

function lk_send_question() {
    $message = sanitize_text_field($_POST['message'] ?? '');
    $transactionID = (int)($_POST['transactionID'] ?? 0);

    if (!$message) {
        wp_send_json_error(['message' => '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞.']);
    }

    $api = lk_api();
    $session = $api->getSession();
    if (empty($session['sessionID']) || empty($session['sessionHash'])) {
        wp_send_json_error(['message' => '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ.']);
    }

    try {
        $res = $api->call('SendQuestion', [
            'sessionID' => $session['sessionID'],
            'hash' => $session['sessionHash'],
            'message' => $message,
            'transactionID' => $transactionID,
        ]);

        $result = (int)($res->SendQuestionResult ?? -999);
        if ($result === 0) {
            wp_send_json_success(['message' => '–í–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏.']);
        } else {
            wp_send_json_error(['message' => "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ (–∫–æ–¥ $result)"]);
        }
    } catch (Throwable $e) {
        error_log('üí• SOAP SendQuestion error: ' . $e->getMessage());
        wp_send_json_error(['message' => '–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º.']);
    }
}
