<?php
/**
 * Template Name: –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç (—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ —Å –æ–ø–ª–∞—Ç–æ–π)
 */

get_header();

// === —Å–µ—Ä–≤–∏—Å—ã ===
require_once get_stylesheet_directory() . '/tools/LkApi.php';
require_once get_stylesheet_directory() . '/tools/LkService.php';

// --- –∫—Ä–µ–¥—ã (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ wp-config.php –∫–∞–∫ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã) ---
$login    = defined('DAROVANIE_LK_LOGIN')    ? DAROVANIE_LK_LOGIN    : '+79037957011';
$password = defined('DAROVANIE_LK_PASSWORD') ? DAROVANIE_LK_PASSWORD : 'Test-1234';

$service = new LkService();
$service->setCredentials($login, $password);

$errors   = [];
$projects = [];
$kids     = [];
$kidNames = [];
$groups   = [];

try {
  $service->ensureSession();

  // –§–ò–û (–æ–¥–∏–Ω –≤—ã–∑–æ–≤) + –ª–æ–≥ –≤ debug.log
  $fio = null;
  try {
      $fio = $service->getUserName(); // string|null
      if ($fio !== null && $fio !== '') {
          error_log('üë§ FIO from GetName: ' . $fio);
      } else {
          error_log('üë§ FIO from GetName: <empty>');
      }
  } catch (\Throwable $e) {
      error_log('üë§ getUserName() error: ' . $e->getMessage());
  }

  // –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–ø–æ–∫/–±–ª–æ–∫–æ–≤
  $projects = $service->getProjects();
  $allTx    = $service->getAllTransactions();
  $kids     = $service->getKidsWithSums();
  $kidNames = $service->getPupilsFromApi();
  $groups   = $service->groupTransactionsByDate($allTx);

} catch (Throwable $e) {
  $errors[] = $e->getMessage();
}
?>
<main class="lk">
  <div class="lk-grid">
    <!-- –õ–µ–≤–æ–µ –º–µ–Ω—é -->
    <aside class="lk-aside">
  <div class="lk-brand">
    <img class="lk-brand__logo"
         src="<?= esc_url( get_stylesheet_directory_uri().'/assets/icons/logo_white.svg' ) ?>"
         alt="–î–∞—Ä–æ–≤–∞–Ω–∏–µ">
  </div>
  <nav class="lk-menu">
    <a class="lk-menu__item" href="#">
      <span class="i i-user"></span><?= esc_html($fio ?: '–ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ') ?>
    </a>
    <a class="lk-menu__item" href="<?= esc_url( wp_logout_url( home_url('/') ) ) ?>">
      <span class="i i-exit"></span> –í—ã–π—Ç–∏
    </a>
  </nav>
</aside>

    <!-- –ö–æ–Ω—Ç–µ–Ω—Ç -->
<section class="lk-content">
  <?php if ($errors): ?>
    <div class="lk-alert lk-alert--error"><?= esc_html(implode(' | ', $errors)) ?></div>
  <?php endif; ?>

  <!-- –î–µ—Ç–∏ -->
  <section class="lk-section lk-section--children">
    <h2 class="lk-section__title">–î–µ—Ç–∏</h2>
    <div class="lk-cards">
      <?php if ($kids): ?>
        <?php foreach ($kids as $kid => $sum): ?>
          <div class="lk-card">
            <div class="lk-kid">
              <div class="lk-kid__name"><?= esc_html($kid) ?></div>
              <div class="lk-kid__sum"><?= $sum < 0 ? '‚àí' : '' ?><?= number_format(abs($sum), 0, ',', ' ') ?> ‚ÇΩ</div>
            </div>
          </div>
        <?php endforeach; ?>
      <?php else: ?>
        <div class="lk-card">
          <div class="lk-kid">
            <div class="lk-kid__name">–î–µ—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>
            <div class="lk-kid__sum">0 ‚ÇΩ</div>
          </div>
        </div>
      <?php endif; ?>
    </div>
  </section>

  <!-- –°—á–µ—Ç–∞ -->
  <section class="lk-section lk-section--accounts">
    <h2 class="lk-section__title">–°—á–µ—Ç–∞</h2>
    <?php
      $lk_projects = $projects;
      include get_stylesheet_directory() . '/templates/lk/accounts.php';
    ?>
  </section>

  <!-- –ò—Å—Ç–æ—Ä–∏—è -->
  <?php
    $lk_groups = $groups;
    $closingBalances = $closingBalances ?? [];
    include get_stylesheet_directory() . '/templates/lk/history.php';
  ?>
</section>
</div>
</main>

<!-- ======================== –ú–û–î–ê–õ–ö–ê –û–ü–õ–ê–¢–´ ======================== -->
<div id="lk-pay-modal" class="lk-modal" hidden>
  <!-- –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ -->
  <div class="lk-modal__backdrop" onclick="LKPay.close()"></div>

  <!-- –æ–∫–Ω–æ -->
  <div class="lk-modal__dialog" role="dialog" aria-modal="true" aria-labelledby="lk-pay-title" onclick="event.stopPropagation()">
    <button class="lk-modal__close" type="button" aria-label="–ó–∞–∫—Ä—ã—Ç—å" onclick="LKPay.close()">√ó</button>

    <h3 id="lk-pay-title" class="lk-modal__title">–û–ø–ª–∞—Ç–∞ –ø–æ QR</h3>

    <div class="lk-pay__banner">
      <strong>–í–∞–∂–Ω–æ:</strong> —ç—Ç–æ—Ç QR —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ <u>–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞</u>.
      –û—Ç–∫—Ä–æ–π—Ç–µ –°–±–µ—Ä/–í–¢–ë/–¢–∏–Ω—å–∫–æ—Ñ—Ñ/–ê–ª—å—Ñ–∞ ‚Üí ¬´–û–ø–ª–∞—Ç–∞ –ø–æ QR¬ª –∏ –Ω–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É.
    </div>

    <div class="lk-pay">
      <div class="lk-pay__qr">
        <img id="lk-pay-qr-img" alt="QR" style="display:none;max-width:260px">
        <pre id="lk-pay-qr-text" class="lk-pay__raw" style="display:none"></pre>

        <div class="lk-pay__actions">
          <button type="button" class="lk-btn" onclick="LKPay.copy()">–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É</button>
          <button type="button" class="lk-btn" onclick="LKPay.download()">–°–∫–∞—á–∞—Ç—å QR (PNG)</button>
          <button type="button" class="lk-btn lk-btn--secondary" onclick="LKPay.close()">–ó–∞–∫—Ä—ã—Ç—å</button>
        </div>

        <div class="lk-pay__hint">
          –°–∫–∞–Ω–∏—Ä—É–π—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±–∞–Ω–∫–∞. –û–±—ã—á–Ω–∞—è –∫–∞–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç (ST00012) –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç.
        </div>
      </div>

      <div class="lk-pay__meta">
        <div><b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b> <span id="lk-pay-recipient"></span></div>
        <div><b>–ë–∞–Ω–∫:</b> <span id="lk-pay-bank"></span></div>
        <div><b>–°—á—ë—Ç:</b> <span id="lk-pay-acc"></span></div>
        <div><b>–ò–ù–ù/–ö–ü–ü:</b> <span id="lk-pay-innkpp"></span></div>
        <div><b>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:</b> <span id="lk-pay-purpose"></span></div>
        <div><b>–°—É–º–º–∞:</b> <span id="lk-pay-amount"></span></div>
      </div>
    </div>
  </div>
</div>



<script>
/**
 * –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è QR-–æ–ø–ª–∞—Ç—ã (–ê–ù–û–û / –ò–ü / –õ–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç).
 * –ö–ª—é—á ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞/—Å—á—ë—Ç–∞, –∫–∞–∫ –≤ –±–ª–æ–∫–µ ¬´–°—á–µ—Ç–∞¬ª –∏/–∏–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏.
 */
window.LK_PAY_REQUISITES = {
  '–ê–ù–û–û': {
    Name:        '–û–±—â–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ¬´–®–∫–æ–ª–∞ ¬´–î–∞—Ä–æ–≤–∞–Ω–∏–µ¬ª¬ª',
    PayeeINN:    '5042147283',
    KPP:         '504201001',
    PersonalAcc: '40703810040000003102',
    BankName:    '–ü–ê–û ¬´–°–±–µ—Ä–±–∞–Ω–∫¬ª',
    BIC:         '044525225',
    CorrespAcc:  '30101810400000000225'
  },
  '–ú–ë–ê': {
    Name:        '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å –ë—É—Ä–ª–∞–∫–æ–≤–∞ –Æ–ª–∏—è –ü–µ—Ç—Ä–æ–≤–Ω–∞',
    PayeeINN:    '504224868700',
    PersonalAcc: '40802810425340000513',
    BankName:    '–§–ò–õ–ò–ê–õ ¬´–¶–ï–ù–¢–†–ê–õ–¨–ù–´–ô¬ª –ë–ê–ù–ö–ê –í–¢–ë (–ü–ê–û)',
    BIC:         '044525411',
    CorrespAcc:  '30101810145250000411'
  },
  '–õ–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç': { // –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ò–ü
    Name:        '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å –ë—É—Ä–ª–∞–∫–æ–≤–∞ –Æ–ª–∏—è –ü–µ—Ç—Ä–æ–≤–Ω–∞',
    PayeeINN:    '504224868700',
    PersonalAcc: '40802810425340000513',
    BankName:    '–§–ò–õ–ò–ê–õ ¬´–¶–ï–ù–¢–†–ê–õ–¨–ù–´–ô¬ª –ë–ê–ù–ö–ê –í–¢–ë (–ü–ê–û)',
    BIC:         '044525411',
    CorrespAcc:  '30101810145250000411'
  }
};

// –ê–ª–∏–∞—Å, —á—Ç–æ–±—ã —Å–±–æ—Ä—â–∏–∫ payload –≤–∏–¥–µ–ª –º–∞–ø–ø–∏–Ω–≥
window.PAY_CONFIG = window.PAY_CONFIG || window.LK_PAY_REQUISITES;
</script>

<script>
/**
 * –õ—ë–≥–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø–ª–∞—Ç—ã: —Å–±–æ—Ä–∫–∞ ST00012 –∏ –ø–æ–∫–∞–∑ –º–æ–¥–∞–ª–∫–∏.
 * –°–æ–≤–º–µ—Å—Ç–∏–º–∞ —Å–æ —Å—Ç–∞—Ä—ã–º onclick="openQrModal(project, amount, purpose)".
 */
(function () {
  const LKPay = {
    _payload: '',
    _escHandler: null,

    // –°–±–æ—Ä–∫–∞ –∏–∑ –º–∞–ø–ø–∏–Ω–≥–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
    _buildFromProject({ project = '–õ–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç', amountRub = 0, purpose = '' } = {}) {
      const cfgMap = (window.PAY_CONFIG || window.LK_PAY_REQUISITES || {});
      const cfg = cfgMap[project] || cfgMap['–õ–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç'];
      if (!cfg) return null;

      const data = {
        ST: 'ST00012',
        Name:        cfg.Name,
        PersonalAcc: cfg.PersonalAcc,
        BankName:    cfg.BankName,
        BIC:         cfg.BIC,
        CorrespAcc:  cfg.CorrespAcc,
        PayeeINN:    cfg.PayeeINN
      };
      if (cfg.KPP) data.KPP = cfg.KPP;
      if (purpose) data.Purpose = purpose;
      if (amountRub > 0) data.Sum = String(Math.round(amountRub * 100)); // –∫–æ–ø–µ–π–∫–∏

      const payload = Object.entries(data)
        .map(([k,v]) => `${k}=${String(v)}`).join('|');

      const fields = {
        recipient:  cfg.Name,
        bank:       cfg.BankName,
        account:    cfg.PersonalAcc,
        innkpp:     cfg.PayeeINN + (cfg.KPP ? (' / ' + cfg.KPP) : ''),
        purpose:    purpose || '–û–ø–ª–∞—Ç–∞',
        amountText: amountRub ? amountRub.toLocaleString('ru-RU') + ' ‚ÇΩ' : '‚Äî'
      };

      return { payload, fields };
    },

    /**
     * open(options):
     * 1) open({ project, amountRub, purpose })
     * 2) open({ payload, recipient, bank, account, innkpp, purpose, amountText })
     */
    open(opts = {}) {
      let payload = '';
      let fields  = null;

      if (opts.payload) {
        payload = String(opts.payload);
        fields = {
          recipient:  opts.recipient,
          bank:       opts.bank,
          account:    opts.account,
          innkpp:     opts.innkpp,
          purpose:    opts.purpose,
          amountText: opts.amountText
        };
      } else {
        const built = this._buildFromProject(opts);
        if (!built) { console.error('LKPay: –Ω–µ—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –¥–ª—è', opts); return; }
        payload = built.payload;
        fields  = built.fields;
      }

      this._payload = payload;

      // –í–∏–¥–∏–º—ã–µ –ø–æ–ª—è —Å–ø—Ä–∞–≤–∞
      const setText = (id, v) => { if (v != null) { const el = document.getElementById(id); if (el) el.textContent = v; } };
      if (fields) {
        setText('lk-pay-recipient', fields.recipient);
        setText('lk-pay-bank',      fields.bank);
        setText('lk-pay-acc',       fields.account);
        setText('lk-pay-innkpp',    fields.innkpp);
        setText('lk-pay-purpose',   fields.purpose);
        setText('lk-pay-amount',    fields.amountText);
      }

      // QR-–∫–∞—Ä—Ç–∏–Ω–∫–∞ (–µ—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å ‚Äî –ø–æ–∫–∞–∂–µ–º —Å—ã—Ä—É—é —Å—Ç—Ä–æ–∫—É)
      const img = document.getElementById('lk-pay-qr-img');
      const txt = document.getElementById('lk-pay-qr-text');
      if (img && txt) {
        img.onerror = () => { img.style.display='none'; txt.style.display='block'; txt.textContent=this._payload; };
        img.onload  = () => { img.style.display='block'; txt.style.display='none'; };
        img.src = 'https://api.qrserver.com/v1/create-qr-code/?size=240x240&data=' + encodeURIComponent(this._payload);
      }

      // –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª–∫–∏ + Esc
      const modal = document.getElementById('lk-pay-modal');
      if (modal) {
        modal.hidden = false;
        document.body.classList.add('lk-modal-open');
      }
      this._escHandler = (e)=>{ if (e.key === 'Escape') this.close(); };
      document.addEventListener('keydown', this._escHandler);
    },

    close() {
      const modal = document.getElementById('lk-pay-modal');
      if (modal) modal.hidden = true;
      document.body.classList.remove('lk-modal-open');
      if (this._escHandler) {
        document.removeEventListener('keydown', this._escHandler);
        this._escHandler = null;
      }
    },

    copy() {
      if (!this._payload) return;
      if (navigator.clipboard?.writeText) {
        navigator.clipboard.writeText(this._payload).catch(()=>{});
      } else {
        const ta = document.createElement('textarea');
        ta.value = this._payload; document.body.appendChild(ta);
        ta.select(); try { document.execCommand('copy'); } catch(e) {}
        ta.remove();
      }
    },

    async download() {
      if (!this._payload) return;
      const url = 'https://api.qrserver.com/v1/create-qr-code/?size=480x480&data=' + encodeURIComponent(this._payload);
      try {
        const blob = await fetch(url).then(r=>r.blob());
        const a = document.createElement('a');
        a.href = URL.createObjectURL(blob);
        a.download = 'pay-qr.png';
        document.body.appendChild(a);
        a.click();
        URL.revokeObjectURL(a.href);
        a.remove();
      } catch(e) {
        console.error('LKPay: –æ—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è', e);
      }
    }
  };

  // –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º:
  window.openQrModal = function(project, amount, purpose){
    const amt = parseFloat(amount) || 0;
    LKPay.open({ project, amountRub: amt, purpose: purpose || '' });
    return false;
  };

  window.LKPay = LKPay;
})();
</script>



<?php get_footer(); ?>
